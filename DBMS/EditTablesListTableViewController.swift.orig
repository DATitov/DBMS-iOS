//
//  EditTablesListTableViewController.swift
//  SQLClient
//
//  Created by Dmitrii Titov on 19.03.17.
//  Copyright © 2017 Dmitrii Titov. All rights reserved.
//

import UIKit

class EditTablesListTableViewController: UITableViewController {

    let interactor = EditTablesListInteractor()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        tableView.register(UINib(nibName: "TableCell", bundle: nil), forCellReuseIdentifier: "TableCell")
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    // MARK: - Table view data source

    override func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        if section == 0 {
            return self.interactor.getNumberOfTables()
        }else{
            return 0
        }
    }
    
    @IBAction func BackButtonPressed(_ sender: UIBarButtonItem) {
        self.navigationController?.dismiss(animated: true, completion: {
            
        })
    }
    
    @IBAction func createTableButtonPressed(_ sender: UIBarButtonItem) {
        let alert = UIAlertController(title: "Новая таблица", message: "Введите название таблицы", preferredStyle: .alert)

        alert.addTextField { (textField) in
            textField.placeholder = "Название таблицы"
        }
        
        alert.addAction(UIAlertAction(title: "Отмена", style: .cancel, handler: { [weak alert] (action) -> Void in
            alert?.dismiss(animated: true, completion: { 
                
            })
        }))
        
        alert.addAction(UIAlertAction(title: "OK", style: .default, handler: { [weak alert] (action) -> Void in
            let textField = (alert?.textFields![0])! as UITextField
            DispatchQueue.main.async {
                [unowned self] in
                self.showCreateNewTableScreen(tablName: textField.text!)
            }
        }))
        
        self.present(alert, animated: true, completion: nil)
    }
    
    func showCreateNewTableScreen(tablName : String) {
        
        let interactor = EditTableInteractor(tableName: tablName)
        let vc = StoryboardHelper.editTableVC()
        vc.interactor = interactor
        
        self.navigationController?.pushViewController(vc, animated: true)
        //TableEditingRouter.showCreateNewTableScreen(tablName: tablName)
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "TableCell", for: indexPath) as! TableCell
        
<<<<<<< 6ac59c694f32dc6ec5685a05e4eca83bf887acbf
        let table = DataInteractor.shared.tables[indexPath.row]
        cell.update(title: DataInteractor.shared.getTableName(table: table), number: "\(table.count)")
=======
        let row = indexPath.row
        
        //let table = DataInteractor.shared.tables[indexPath.row]
        cell.update(title: self.interactor.getTableName(index: row), number: self.interactor.getTablePropertiesCountString(index: row))
>>>>>>> super puper turbo
        
        return cell
    }

    /*
    // Override to support conditional editing of the table view.
    override func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -> Bool {
        // Return false if you do not want the specified item to be editable.
        return true
    }
    */

    /*
    // Override to support editing the table view.
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            // Delete the row from the data source
            tableView.deleteRows(at: [indexPath], with: .fade)
        } else if editingStyle == .insert {
            // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
        }    
    }
    */

    /*
    // Override to support rearranging the table view.
    override func tableView(_ tableView: UITableView, moveRowAt fromIndexPath: IndexPath, to: IndexPath) {

    }
    */

    /*
    // Override to support conditional rearranging of the table view.
    override func tableView(_ tableView: UITableView, canMoveRowAt indexPath: IndexPath) -> Bool {
        // Return false if you do not want the item to be re-orderable.
        return true
    }
    */

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
